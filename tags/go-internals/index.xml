<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go-internals on Moreal</title><link>https://blog.moreal.dev/tags/go-internals/</link><description>Recent content in go-internals on Moreal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Feb 2020 22:24:39 +0900</lastBuildDate><atom:link href="https://blog.moreal.dev/tags/go-internals/index.xml" rel="self" type="application/rss+xml"/><item><title>How works Go interface?</title><link>https://blog.moreal.dev/posts/2020/02/22/go-interfaces/</link><pubDate>Sat, 22 Feb 2020 22:24:39 +0900</pubDate><guid>https://blog.moreal.dev/posts/2020/02/22/go-interfaces/</guid><description>의문 utilForever/falcon의 간단한 프로토타입을 만들면서 CompilerProxy 인터페이스를 구현하는 GccCompilerProxy 구조체를 작성하였습니다.
// compiler_proxy_test.go var compilerProxy *CompilerProxy = NewGccCompilerProxy() // compiler_proxy.go type CompilerProxy interface { AddLibrary() IncludeDirectory() Compile(srcPath, outPath string) } type GccCompilerProxy struct {} func (cp *GccCompilerProxy) AddLibrary() {} func (cp *GccCompilerProxy) IncludeDirectory() {} func (cp *GccCompilerProxy) Compile(srcPath, outPath string) {} func NewGccCompilerProxy() *GccCompilerProxy { return &amp;amp;GccCompilerProxy{} } 당연히 *interface = *struct 대입이 될 거라 생각했지만 컴파일러는 제게 에러 메시지 만을 남겼습니다.</description></item></channel></rss>
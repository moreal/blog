<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Moreal</title><link>https://blog.moreal.dev/</link><description>Recent content on Moreal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 04 Oct 2020 22:24:39 +0900</lastBuildDate><atom:link href="https://blog.moreal.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Home → Public #0</title><link>https://blog.moreal.dev/posts/2020/10/04/gce-as-tunnel/</link><pubDate>Sun, 04 Oct 2020 22:24:39 +0900</pubDate><guid>https://blog.moreal.dev/posts/2020/10/04/gce-as-tunnel/</guid><description>✏️ 글을 쓰는 배경 OpenStack 을 이용한 프라이빗 클라우드 구축은 2018 컨트리뷰톤 이후로 계속 꾸준히 가지고 있던 작은 목표였다. 이번에 데스크탑을 구매하면서 사용하다보니 상당히 많은 리소스가 놀고 있는 것을 보았고 굳이 비싼 클라우드 인스턴스를 사용하지 않더라도 터널링만 잘 되면 로컬에서 서버를 운영해도 괜찮을 거라는 생각이 들었다. 그래서 여러가지 시도를 하고 있고 그 중 GCE free instance 위에서 IPSec VPN 구축해본 경험에 대한 이야기를 간략히 적어보려고 한다.
💭 ngrok을 고려하지 않은 이유 굳이 GCE free instance가 아니어도 TCP 터널을 제공하는 서비스에는 ngrok이 있다.</description></item><item><title>How works Go interface?</title><link>https://blog.moreal.dev/posts/2020/02/22/go-interfaces/</link><pubDate>Sat, 22 Feb 2020 22:24:39 +0900</pubDate><guid>https://blog.moreal.dev/posts/2020/02/22/go-interfaces/</guid><description>의문 utilForever/falcon의 간단한 프로토타입을 만들면서 CompilerProxy 인터페이스를 구현하는 GccCompilerProxy 구조체를 작성하였습니다.
// compiler_proxy_test.go var compilerProxy *CompilerProxy = NewGccCompilerProxy() // compiler_proxy.go type CompilerProxy interface { AddLibrary() IncludeDirectory() Compile(srcPath, outPath string) } type GccCompilerProxy struct {} func (cp *GccCompilerProxy) AddLibrary() {} func (cp *GccCompilerProxy) IncludeDirectory() {} func (cp *GccCompilerProxy) Compile(srcPath, outPath string) {} func NewGccCompilerProxy() *GccCompilerProxy { return &amp;amp;GccCompilerProxy{} } 당연히 *interface = *struct 대입이 될 거라 생각했지만 컴파일러는 제게 에러 메시지 만을 남겼습니다.</description></item><item><title>2019 회고 및 2020 계획</title><link>https://blog.moreal.dev/posts/2019/12/30/2019-retrospect/</link><pubDate>Mon, 30 Dec 2019 10:24:39 +0900</pubDate><guid>https://blog.moreal.dev/posts/2019/12/30/2019-retrospect/</guid><description>많다면 많고 적다면 적은 이벤트들이 가득했던 2019년이 마무리 되어간다.
2019년을 되돌아 보면서 내년에 대한 큰 피처를 정해놓고자 한다.
Codegate 2019 😎 정보보안과 학생들은 매년 코드게이트에 견학을 갔었다. 하지만 이번 코드게이트 2019에는 본선에 참가자로써 참가했었다. 등수도 그럭저럭 나왔지만 언제나 사라지지 않는 문제오류와 불만족스러움때문에 그다지 기분좋은 부분은 아니었다. 등수보다는 아무래도 국제대회다 보니 이전에 CTF를 돌아다니면서 봤던 Vlad 같은 분들을 볼 수 있었는데, 감회가 새로웠다.
여담이지만 코드게이트 본선 당일은 내 생일이라서 아쉽게도 생일케이크를 못 먹었다 😅.</description></item><item><title>Python 패러독스</title><link>https://blog.moreal.dev/posts/2020/11/29/python-paradox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.moreal.dev/posts/2020/11/29/python-paradox/</guid><description>2004년 8월.
최근의 이야기에서 저는 많은 사람들을 혼란스럽게 하는 무언가를 말한 적이 있습니다, 여러분은 Java 프로젝트를 작업하는 것 보다 Python 프로젝트를 작업하는 더 똑똑한 프로그래머를 얻을 수 있을 것입니다.
저는 이것을 Java 프로그래머들이 바보 같다는 의미에서 한 말이 아닙니다. 저는 Python 프로그래머들이 똑똑하다고 말하려던 것이었습니다. 새로운 프로그래밍 언어를 배우는 것은 많이 있는 일입니다. 그리고 사람들은 직업을 얻기 위해서 Python을 배우지 않습니다. 그들은 진정으로 프로그래밍을 좋아하고 이미 그들이 알고 있는 언어들에 만족하지 않기 때문에 Python을 공부합니다.</description></item></channel></rss>